void swap(int &a, int &b){ int temp = a;  a = b; b = temp; }

void quicksort(int arr[], int start, int end)
{
	if (start > end) return;

	
	int pivot = start, i=start+1, j=end;
	swap(arr[start], arr[(start + end) / 2]); //pivot in the middle

	while (i <= j)
	{
		while (arr[i] <= arr[pivot] && i<=end) i++; // 더 큰수를 찾는다.
		while (arr[j] >= arr[pivot] && j>start) j--;

		if (i > j) swap(arr[j], arr[pivot]);
		else swap(arr[i], arr[j]);
	}

	quicksort(arr, start, j - 1);
	quicksort(arr, j + 1, end);
}

// Reasons to choose a pivot in the middle.
// https://en.wikipedia.org/wiki/Quicksort#Formal_analysis
